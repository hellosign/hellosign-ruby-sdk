=begin
#HelloSign API

#HelloSign v3 API

The version of the OpenAPI document: 3.0.0
Contact: apisupport@hellosign.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json_spec'
require_relative '../test_utils'

config = HelloSign.configure
api_client = HelloSign::ApiClient.new(config)
root_file_path = __dir__ + "/../../test_fixtures"

describe HelloSign::UnclaimedDraftApi do
  context 'UnclaimedDraftApiTest' do
    api = HelloSign::UnclaimedDraftApi.new

    it 'testUnclaimedDraftCreate' do
      request_class = 'UnclaimedDraftCreateRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'UnclaimedDraftCreateResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = api_client.convert_to_type(response_data, response_class) || UnclaimedDraftCreateResponse
      obj = api_client.convert_to_type(request_data, request_class) || UnclaimedDraftCreateRequest

      result = api.unclaimed_draft_create(obj)

      expect(result.class.to_s).to eq("HelloSign::#{response_class}")
      expect(result.to_json).to be_json_eql(expected.to_json)
    end

    it 'testUnclaimedDraftCreateEmbedded' do
      request_class = 'UnclaimedDraftCreateEmbeddedRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'UnclaimedDraftCreateResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = api_client.convert_to_type(response_data, response_class) || UnclaimedDraftCreateResponse
      obj = api_client.convert_to_type(request_data, request_class) || UnclaimedDraftCreateEmbeddedRequest
      obj.file = [File.new("#{root_file_path}/pdf-sample.pdf", "r")]

      result = api.unclaimed_draft_create_embedded(obj)

      expect(result.class.to_s).to eq("HelloSign::#{response_class}")
      expect(result.to_json).to be_json_eql(expected.to_json)
    end

    it 'testUnclaimedDraftCreateEmbeddedWithTemplate' do
      request_class = 'UnclaimedDraftCreateEmbeddedWithTemplateRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'UnclaimedDraftCreateResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = api_client.convert_to_type(response_data, response_class) || UnclaimedDraftCreateResponse
      obj = api_client.convert_to_type(request_data, request_class) || UnclaimedDraftCreateEmbeddedWithTemplateRequest
      obj.file = [File.new("#{root_file_path}/pdf-sample.pdf", "r")]

      result = api.unclaimed_draft_create_embedded_with_template(obj)

      expect(result.class.to_s).to eq("HelloSign::#{response_class}")
      expect(result.to_json).to be_json_eql(expected.to_json)
    end

    it 'testUnclaimedDraftEditAndResend' do
      signature_request_id = '2f9781e1a83jdja934d808c153c2e1d3df6f8f2f'

      request_class = 'UnclaimedDraftEditAndResendRequest'
      request_data = get_fixture_data(request_class)[:default]

      response_class = 'UnclaimedDraftCreateResponse'
      response_data = get_fixture_data(response_class)[:default]

      set_expected_response(200, JSON.dump(response_data))
      expected = api_client.convert_to_type(response_data, response_class) || UnclaimedDraftCreateResponse
      obj = api_client.convert_to_type(request_data, request_class) || UnclaimedDraftEditAndResendRequest

      result = api.unclaimed_draft_edit_and_resend(signature_request_id, obj)

      expect(result.class.to_s).to eq("HelloSign::#{response_class}")
      expect(result.to_json).to be_json_eql(expected.to_json)
    end
  end
end
